from __future__ import annotations

import http.server as SimpleHTTPServer
from http.server import HTTPServer
from typing import Any

def get_logger(name: Any, level: Any, fmt: Any): ...

class KVHandler(SimpleHTTPServer.SimpleHTTPRequestHandler):
    def do_GET(self) -> None: ...
    def do_PUT(self) -> None: ...
    def do_DELETE(self) -> None: ...
    def log_message(self, format: Any, *args: Any) -> None: ...
    def send_status_code(self, code: Any) -> None: ...

class KVHTTPServer(HTTPServer):
    delete_kv_lock: Any = ...
    delete_kv: Any = ...
    kv_lock: Any = ...
    kv: Any = ...
    def __init__(self, port: Any, handler: Any) -> None: ...
    def get_deleted_size(self, key: Any): ...

class KVServer:
    http_server: Any = ...
    listen_thread: Any = ...
    size: Any = ...
    def __init__(self, port: Any, size: Any = ...) -> None: ...
    def start(self): ...
    def stop(self) -> None: ...
    def should_stop(self): ...
