from __future__ import annotations

import unittest
from typing import Any, Optional

def conv_net(img: Any, label: Any): ...
def pact(x: Any, name: Optional[Any] = ...): ...

class TestUserDefinedQuantization(unittest.TestCase):
    def quantization_scale(
        self,
        use_cuda: Any,
        seed: Any,
        activation_quant_type: Any,
        weight_quant_type: str = ...,
        for_ci: bool = ...,
        act_preprocess_func: Optional[Any] = ...,
        weight_preprocess_func: Optional[Any] = ...,
        act_quantize_func: Optional[Any] = ...,
        weight_quantize_func: Optional[Any] = ...,
    ): ...
    def test_act_preprocess_cuda(self) -> None: ...
    def test_act_preprocess_cpu(self) -> None: ...
    def test_weight_preprocess_cuda(self) -> None: ...
    def test_weight_preprocess_cpu(self) -> None: ...
    def test_act_quantize_cuda(self) -> None: ...
    def test_act_quantize_cpu(self) -> None: ...
    def test_weight_quantize_cuda(self) -> None: ...
    def test_weight_quantize_cpu(self) -> None: ...
