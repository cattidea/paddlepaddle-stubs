from __future__ import annotations

import unittest
from typing import Any

from imperative_test_utils import fix_model_dict as fix_model_dict
from paddle.fluid.contrib.slim.quantization import *

class TestFuseLinearBn(unittest.TestCase):
    def test_fuse(self) -> None: ...

class TestImperativePTQ(unittest.TestCase):
    @classmethod
    def setUpClass(cls) -> None: ...
    def cache_unzipping(self, target_folder: Any, zip_path: Any) -> None: ...
    def download_model(self, data_url: Any, data_md5: Any, folder_name: Any): ...
    ptq: Any = ...
    batch_num: int = ...
    batch_size: int = ...
    eval_acc_top1: float = ...
    gt_thresholds: Any = ...
    def set_vars(self) -> None: ...
    def model_test(self, model: Any, batch_num: int = ..., batch_size: int = ...): ...
    def program_test(self, program_path: Any, batch_num: int = ..., batch_size: int = ...): ...
    def func_ptq(self) -> None: ...
    def test_ptq(self) -> None: ...

class TestImperativePTQfuse(TestImperativePTQ):
    def func_ptq(self) -> None: ...
    def test_ptq(self) -> None: ...

class TestImperativePTQHist(TestImperativePTQ):
    ptq: Any = ...
    batch_num: int = ...
    batch_size: int = ...
    eval_acc_top1: float = ...
    gt_thresholds: Any = ...
    def set_vars(self) -> None: ...

class TestImperativePTQKL(TestImperativePTQ):
    ptq: Any = ...
    batch_num: int = ...
    batch_size: int = ...
    eval_acc_top1: float = ...
    gt_thresholds: Any = ...
    def set_vars(self) -> None: ...
