from __future__ import annotations

from typing import Any, Optional

def enabled(): ...
def enable_dygraph(place: Any | None = ...) -> None: ...
def disable_dygraph() -> None: ...
def no_grad(func: Any | None = ...): ...

class no_grad_:
    def __call__(self, func: Any): ...
    orig: Any = ...
    def __enter__(self) -> None: ...
    def __exit__(self, *args: Any) -> None: ...

def guard(place: Any | None = ...) -> None: ...
def grad(
    outputs: Any,
    inputs: Any,
    grad_outputs: Any | None = ...,
    retain_graph: Any | None = ...,
    create_graph: bool = ...,
    only_inputs: bool = ...,
    allow_unused: bool = ...,
    no_grad_vars: Any | None = ...,
): ...
