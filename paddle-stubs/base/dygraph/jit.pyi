from __future__ import annotations

from typing import Any, Optional

from paddle.base.dygraph.dygraph_to_static.logging_utils import (
    set_code_level as set_code_level,
)
from paddle.base.dygraph.dygraph_to_static.logging_utils import (
    set_verbosity as set_verbosity,
)

dygraph_to_static_func: Any

class _SaveLoadConfig:
    with_hook: bool = ...
    def __init__(self) -> None: ...
    @property
    def output_spec(self): ...
    @output_spec.setter
    def output_spec(self, spec: Any) -> None: ...
    @property
    def model_filename(self): ...
    @model_filename.setter
    def model_filename(self, filename: Any) -> None: ...
    @property
    def params_filename(self): ...
    @params_filename.setter
    def params_filename(self, filename: Any) -> None: ...
    @property
    def keep_name_table(self): ...
    @keep_name_table.setter
    def keep_name_table(self, value: Any) -> None: ...

class HookRemoveHelper:
    def __init__(self, hook: Any) -> None: ...
    def remove(self) -> None: ...

def save(layer: Any, path: Any, input_spec: Any | None = ..., **configs: Any) -> None: ...
def load(path: Any, **configs: Any): ...
