from __future__ import annotations

from typing import Any

from ..utils import get_logger as get_logger

class Converter:
    def __init__(self, tensors_dict: Any, pre_strategy: Any, cur_strategy: Any) -> None: ...
    def convert(self, strict: bool = ...): ...
    def convert_with_prefix_match(self, tensors_dict: Any, tensor_not_in_pre: Any, tensor_not_in_cur: Any): ...
    @staticmethod
    def merge_and_slice(tensor_list: Any, pre_dist_attr: Any, cur_dist_attr: Any): ...
    @staticmethod
    def merge_with_dist_attr(tensor_list: Any, dist_attr: Any): ...
    @staticmethod
    def slice_with_dist_attr(tensor: Any, dist_attr: Any): ...
    @staticmethod
    def merge(partition_tensor_list: Any, tensor: Any, partition_index: Any, complete_shape: Any) -> None: ...
    @staticmethod
    def split(complete_tensor: Any, partition_index_list: Any, length: Any): ...
