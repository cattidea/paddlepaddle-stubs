from __future__ import annotations

from typing import Any

from .args_envs import env_args_mapping as env_args_mapping
from .args_envs import fetch_envs as fetch_envs
from .args_envs import parse_args as parse_args
from .node import Node as Node
from .status import Status as Status

class Context:
    envs: Any = ...
    node: Any = ...
    status: Any = ...
    logger: Any = ...
    events: Any = ...
    def __init__(self, enable_plugin: bool = ...) -> None: ...
    def is_legacy_mode(self): ...
    def get_envs(self): ...
    def get_logger(self, level: Any = ...): ...
    def continous_log(self) -> bool: ...
    def set_env_in_args(self) -> None: ...
