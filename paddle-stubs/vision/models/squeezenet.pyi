from __future__ import annotations

from typing import Any

import paddle.nn as nn

model_urls: Any

class MakeFireConv(nn.Layer):
    def __init__(self, input_channels: Any, output_channels: Any, filter_size: Any, padding: int = ...) -> None: ...
    def forward(self, x: Any): ...

class MakeFire(nn.Layer):
    def __init__(
        self, input_channels: Any, squeeze_channels: Any, expand1x1_channels: Any, expand3x3_channels: Any
    ) -> None: ...
    def forward(self, inputs: Any): ...

class SqueezeNet(nn.Layer):
    version: Any = ...
    num_classes: Any = ...
    with_pool: Any = ...
    def __init__(self, version: Any, num_classes: int = ..., with_pool: bool = ...) -> None: ...
    def forward(self, inputs: Any): ...

def squeezenet1_0(pretrained: bool = ..., **kwargs: Any): ...
def squeezenet1_1(pretrained: bool = ..., **kwargs: Any): ...
