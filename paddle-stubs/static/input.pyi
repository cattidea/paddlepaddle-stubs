from __future__ import annotations

from typing import Any, Optional

def data(name: Any, shape: Any, dtype: Optional[Any] = ..., lod_level: int = ...): ...

class InputSpec:
    shape: Any = ...
    dtype: Any = ...
    name: Any = ...
    def __init__(self, shape: Any, dtype: str = ..., name: Optional[str] = ...) -> None: ...
    @classmethod
    def from_tensor(cls, tensor: Any, name: Optional[str] = ...): ...
    @classmethod
    def from_numpy(cls, ndarray: Any, name: Optional[str] = ...): ...
    def batch(self, batch_size: Any): ...
    def unbatch(self): ...
    def __hash__(self) -> Any: ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
