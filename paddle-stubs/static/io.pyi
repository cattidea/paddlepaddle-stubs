from __future__ import annotations

from typing import Any

from paddle.fluid.executor import Executor as Executor

def normalize_program(program: Any, feed_vars: Any, fetch_vars: Any): ...
def is_persistable(var: Any): ...
def serialize_program(feed_vars: Any, fetch_vars: Any, **kwargs: Any): ...
def serialize_persistables(feed_vars: Any, fetch_vars: Any, executor: Any, **kwargs: Any): ...
def save_to_file(path: Any, content: Any) -> None: ...
def save_inference_model(path_prefix: Any, feed_vars: Any, fetch_vars: Any, executor: Any, **kwargs: Any) -> None: ...
def deserialize_program(data: Any): ...
def deserialize_persistables(program: Any, data: Any, executor: Any) -> None: ...
def load_from_file(path: Any): ...
def load_inference_model(path_prefix: Any, executor: Any, **kwargs: Any): ...
